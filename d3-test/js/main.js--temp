// set the dimensions and margins of the graph
let margin = { top: 10, right: 30, bottom: 50, left: 60 },
  width = 460 - margin.left - margin.right,
  height = 400 - margin.top - margin.bottom;

// append the svg object to the body of the page
let svg = d3
  .select("#my_dataviz")
  .append("svg")
  .attr("width", width + margin.left + margin.right)
  .attr("height", height + margin.top + margin.bottom)
  .append("g")
  .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

//Read the data
let questions = [
  d3.csv("https://raw.githubusercontent.com/ChihHsiangChien/question_database/master/csv/nature.csv"),
  d3.csv("https://raw.githubusercontent.com/ChihHsiangChien/question_database/master/csv/society.csv"),
  d3.csv("https://raw.githubusercontent.com/ChihHsiangChien/question_database/master/csv/math.csv"),  
  d3.csv("https://raw.githubusercontent.com/ChihHsiangChien/question_database/master/csv/chinese.csv"),
  d3.csv("https://raw.githubusercontent.com/ChihHsiangChien/question_database/master/csv/english.csv"),

];


let allData = [];
let subject = "自然";
let time = 0;
let year = '103'

let intervalBeat;

//OUTS: add a Year label to svg
let timeText = svg
  .append("text")
  .attr("x", width / 2)
  .attr("y", margin.top);

Promise.all(questions).then(function (data) {
  data.forEach(function (eachDataset) {
    eachDataset.forEach(function (d) {
      //d["question"] = +d["question"];
      d["dis"] = +d["dis"];
      d["pass"] = +d["pass"];      
      //d["year"] = new Date(d["year"]);

    });
  });

  allData = data;


  updateChart(allData, subject, time, year);
});



//Add in event listener for indicator choice.
$("#subjectChoice").on("change", function () {
  subject =
    $("#subjectChoice").val() === "nature"
      ? "自然"
      : $("#subjectChoice").val() === "soceity"
      ? "社會"
      : $("#subjectChoice").val() === "math"
      ? "數學"
      : $("#subjectChoice").val() === "chinese"
      ? "國文"
      : $("#subjectChoice").val() === "english"
      ? "英語"      
      : null;
  updateChart(allData, subject, time, year);
});

//Add in event listener for year choice.
$("#yearChoice").on("change", function () {
  year =
    $("#yearChoice").val() === "all"
      ? "all"
      : $("#yearChoice").val() === "110"
      ? "110"
      : $("#yearChoice").val() === "109"
      ? "109"
      : $("#yearChoice").val() === "108"
      ? "108"
      : $("#yearChoice").val() === "107"
      ? "107"      
      : $("#yearChoice").val() === "106"
      ? "106"            
      : $("#yearChoice").val() === "105"
      ? "105" 
      : $("#yearChoice").val() === "104"
      ? "104"                  
      : null;


  console.log(year);
  updateChart(allData, subject, time, year) ;

});

//Add in event listener for playing
$("#play").on("click", function () {
  intervalBeat = setInterval(pressPlay, 500);
});

//Add in event listener for pausing
$("#pause").on("click", function () {
  clearInterval(intervalBeat);
});

function pressPlay() {
  if (time < 6) {
    time += 1;
  } else {
    time = 0;
  }
  year = 104 + time;
  updateChart(allData, subject, time, year);
}

//Function that builds the right chart depending on user choice on website:
function updateChart(someData, subject, time, year) {

  let dataNature = d3
    .nest()
    .key(function (d) {
      return d["year"];
    })
    .entries(someData[0]);

  let dataSoceity = d3
    .nest()
    .key(function (d) {
      return d["year"];
    })
    .entries(someData[1]);

  let dataMath = d3
    .nest()
    .key(function (d) {
      return d["year"];
    })
    .entries(someData[2]);

  let dataChinese = d3
    .nest()
    .key(function (d) {
      return d["year"];
    })
    .entries(someData[3]);

  let dataEnglish = d3
    .nest()
    .key(function (d) {
      return d["year"];
    })
    .entries(someData[4]);



  timeText.text( 104 + time + "年度" +"\n" +  subject);

  let filteredData =
    $("#subjectChoice").val() === "nature"
      ? dataNature[time]
      : $("#subjectChoice").val() === "soceity"
      ? dataSoceity[time]
      : $("#subjectChoice").val() === "math"
      ? dataMath[time]
      : $("#subjectChoice").val() === "chinese"
      ? dataChinese[time]
      : $("#subjectChoice").val() === "english"
      ? dataEnglish[time]
      : null;




 
  filteredData =
    $("#yearChoice").val() === "all"
      ? filteredData["values"]
      : filteredData["values"].filter(
          (each) => each["year"] === $("#yearChoice").val()
        );



  console.log(filteredData);
  // Add X axis
  let x = d3.scaleLinear().domain([0, 1]).range([0, width]);

  svg
    .append("g")
    .attr("transform", "translate(0," + height + ")")
    .call(d3.axisBottom(x));

  //Add x-axis label:
  svg
    .append("text")
    .attr(
      "transform",
      "translate(" + width / 2 + " ," + (height + margin.top + 30) + ")"
    )
    .attr("class", "subject")
    .style("text-anchor", "middle")
    .text("通過率");

  //svg.selectAll(".subject").text(subject);

  // Add Y axis
  let y = d3.scaleLinear().domain([0, 1]).range([height, 0]);
  svg.append("g").call(d3.axisLeft(y));

  //Add y-axis label:
  svg
    .append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", 0 - margin.left)
    .attr("x", 0 - height / 2)
    .attr("dy", "1em")
    .style("text-anchor", "middle")
    .text("鑑別度");

  // Color scale: give me a year name, I return a color
  let color = d3
    .scaleOrdinal()
    .domain([
      "110",
      "109",
      "108",
      "107",
      "106",
      "105",
      "104"                 
    ])
    .range(["#000000ff", "#000011ff", "#000022ff", "#000033ff", "#000044ff", "#110011ff", "#220011ff"]);

  // JOIN new data with old elements.
  var circles = svg.selectAll("circle").data(filteredData, function (d) {
    return d["year"];
  });


  // EXIT old elements not present in new data.
  circles.exit().attr("class", "exit").remove();

  // ENTER new elements present in new data.
  circles
    .enter()
    .append("circle")
    .attr("class", "enter")
    .attr("fill", function (d) {
      return color(d["year"]);
    })
    .merge(circles)
    .attr("cy", function (d) {
      return y(d["dis"]);
    })
    .attr("cx", function (d) {
      //OUTS: Why is this resulting in errors??
      // console.log(x(d["Households' mobile phone ownership (% of population)"]));

      return x(
        d["pass"] 

      );
    })
    .attr("r", 5);
}
